<<<<<<< HEAD
=======

>>>>>>> e85cb36152cc10f075f1cd10029e02569c4cfdd5

public class Bibliotecario extends Usuario {
    private Biblioteca biblioteca;

    public Bibliotecario(String nome, String endereco, String cpf, String email, String telefone, Biblioteca biblioteca) {
        super(nome, endereco, cpf, email, telefone);
        this.biblioteca = biblioteca;
    }

    // Método para cadastrar um membro (usuário)
    public void cadastrarMembro(Usuario usuario) {
        biblioteca.getListaUsuario().add(usuario);
        System.out.println("Membro cadastrado com sucesso: " + usuario.getNome());
    }

    // Método para remover um membro (usuário)
    public boolean removerMembro(Usuario usuario) {
        boolean removido = biblioteca.getListaUsuario().remove(usuario);
        if (removido) {
            System.out.println("Membro removido com sucesso: " + usuario.getNome());
            return true;
        } else {
            System.out.println("Não foi possível remover o membro: " + usuario.getNome());
            return false;
        }
    }

    // Método para adicionar um item à biblioteca
    public void adicionarItem(Item item) {
        biblioteca.getListaItem().add(item);
        System.out.println("Item adicionado com sucesso: " + item.getTitulo());
    }

    // Método para remover um item da biblioteca
    public boolean removerItem(Item item) {
        boolean removido = biblioteca.getListaItem().remove(item);
        if (removido) {
            System.out.println("Item removido com sucesso: " + item.getTitulo());
            return true;
        } else {
            System.out.println("Não foi possível remover o item: " + item.getTitulo());
            return false;
        }
    }

    // Método para emprestar um item para um membro (usuário)
    public void emprestarItem(Membro membro, Item item) {
        if (biblioteca.getListaItem().contains(item)) {
            if (item.isDisponivel()) {
                item.setDisponivel(false);
                membro.adicionarItemEmprestado(item);
                System.out.println("Item emprestado para " + membro.getNome() + ": " + item.getTitulo());
            } else {
                System.out.println("O item já está emprestado: " + item.getTitulo());
            }
        } else {
            System.out.println("O item não está disponível na biblioteca: " + item.getTitulo());
        }
    }


    // Método para devolver um item emprestado por um membro (usuário)
    public void devolverItem(Membro membro, Item item) {
        if (membro.getEmprestimos().contains(item)) {
            item.setDisponivel(true);
            membro.removerItemEmprestado(item);
            System.out.println("Item devolvido por " + membro.getNome() + ": " + item.getTitulo());
        } else {
            System.out.println("O item não está em posse de " + membro.getNome() + ": " + item.getTitulo());
        }
    }

	public Biblioteca getBiblioteca() {
		return biblioteca;
	}

	public void setBiblioteca(Biblioteca biblioteca) {
		this.biblioteca = biblioteca;
	}
    
    
}
