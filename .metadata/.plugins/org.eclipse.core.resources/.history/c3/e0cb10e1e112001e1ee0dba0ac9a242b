import java.time.LocalTime;
import java.util.ArrayList;

public class Biblioteca {
	private String nome;
	private String endereco;
	private LocalTime horarioAbertura;
	private LocalTime horarioFechamento;
	private ArrayList<Item> listaItem;
	private ArrayList<Usuario> listaUsuario;
	
	public Biblioteca(String nome, String endereco, LocalTime abertura, LocalTime fechamento)
	{
		this.nome = nome;
		this.endereco = endereco;
		this.horarioAbertura = abertura;
		this.horarioFechamento = fechamento;
		this.listaItem = new ArrayList<Item>();
		this.listaUsuario = new ArrayList<Usuario>();
	}

	public String getNome() {
		return nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	public String getEndereco() {
		return endereco;
	}

	public void setEndereco(String endereco) {
		this.endereco = endereco;
	}

	public LocalTime getHorarioAbertura() {
		return horarioAbertura;
	}

	public void setHorarioAbertura(LocalTime horarioAbertura) {
		this.horarioAbertura = horarioAbertura;
	}

	public LocalTime getHorarioFechamento() {
		return horarioFechamento;
	}

	public void setHorarioFechamento(LocalTime horarioFechamento) {
		this.horarioFechamento = horarioFechamento;
	}

	public ArrayList<Item> getListaItem() {
		return listaItem;
	}

	public void setListaItem(ArrayList<Item> listaItem) {
		this.listaItem = listaItem;
	}

	public ArrayList<Usuario> getListaUsuario() {
		return listaUsuario;
	}

	public void setListaUsuario(ArrayList<Usuario> listaUsuario) {
		this.listaUsuario = listaUsuario;
	}
	
    // Função para cadastrar um membro (usuário)
    public void cadastrarMembro(Usuario usuario) {
        listaUsuario.add(usuario);
        System.out.println("Membro cadastrado com sucesso: " + usuario.getNome());
    }

    // Função para remover um membro (usuário)
    public void removerMembro(Usuario usuario) {
        boolean removido = listaUsuario.remove(usuario);
        if (removido) {
            System.out.println("Membro removido com sucesso: " + usuario.getNome());
        } else {
            System.out.println("Não foi possível remover o membro: " + usuario.getNome());
        }
    }

    // Função para adicionar um item à biblioteca
    public void adicionarItem(Item item) {
        listaItem.add(item);
        System.out.println("Item adicionado com sucesso: " + item.getTitulo());
    }

    // Função para remover um item da biblioteca
    public void removerItem(Item item) {
        boolean removido = listaItem.remove(item);
        if (removido) {
            System.out.println("Item removido com sucesso: " + item.getTitulo());
        } else {
            System.out.println("Não foi possível remover o item: " + item.getTitulo());
        }
    }

    // Função para emprestar um item para um membro (usuário)
    public void emprestarItem(Usuario usuario, Item item) {
        if (listaItem.contains(item)) {
            if (!item.isEmprestado()) {
                item.setEmprestado(true);
                System.out.println("Item emprestado para " + usuario.getNome() + ": " + item.getTitulo());
            } else {
                System.out.println("O item já está emprestado: " + item.getTitulo());
            }
        } else {
            System.out.println("O item não está disponível na biblioteca: " + item.getTitulo());
        }
    }

    // Função para devolver um item emprestado por um membro (usuário)
    public void devolverItem(Usuario usuario, Item item) {
        if (listaItem.contains(item)) {
            if (item.isEmprestado()) {
                item.setEmprestado(false);
                System.out.println("Item devolvido por " + usuario.getNome() + ": " + item.getTitulo());
            } else {
                System.out.println("O item não está emprestado: " + item.getTitulo());
            }
        } else {
            System.out.println("O item não está disponível na biblioteca: " + item.getTitulo());
        }
    }
}
